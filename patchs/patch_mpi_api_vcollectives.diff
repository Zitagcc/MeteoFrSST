Index: sumi-mpi/mpi_api_vcollectives.cc
===================================================================
--- sumi-mpi.orig/mpi_api_vcollectives.cc
+++ sumi-mpi/mpi_api_vcollectives.cc
@@ -178,29 +178,29 @@ mpi_api::start_alltoallv(const char* nam
   mpi_api_debug(sprockit::dbg::mpi | sprockit::dbg::mpi_collective,
     "%s(<...>,%s,<...>,%s,%s)", name,
     type_str(sendtype).c_str(), type_str(recvtype).c_str(), comm_str(comm).c_str());
-
-  if (sendbuf || recvbuf){
+// modified by Yongjun ZHENG
+//  if (sendbuf || recvbuf){
     collectivev_op* op = new collectivev_op(const_cast<int*>(sendcounts), const_cast<int*>(sdispls),
                                               const_cast<int*>(recvcounts), const_cast<int*>(rdispls),
                                               get_comm(comm));
     start_mpi_collective(collective::alltoallv, sendbuf, recvbuf, sendtype, recvtype, op);
     start_alltoallv(op);
     return op;
-  } else {
-    mpi_comm* commPtr = get_comm(comm);
-    int send_count = 0;
-    int recv_count = 0;
-    int nproc = commPtr->size();
-    for (int i=0; i < nproc; ++i){
-      send_count += sendcounts[i];
-      recv_count += recvcounts[i];
-    }
-    send_count /= nproc;
-    recv_count /= nproc;
-    collective_op_base* op = start_alltoall(comm, send_count, sendtype,
-                                            recv_count, recvtype, sendbuf, recvbuf);
-    return op;
-  }
+  // } else {
+  //   mpi_comm* commPtr = get_comm(comm);
+  //   int send_count = 0;
+  //   int recv_count = 0;
+  //   int nproc = commPtr->size();
+  //   for (int i=0; i < nproc; ++i){
+  //     send_count += sendcounts[i];
+  //     recv_count += recvcounts[i];
+  //   }
+  //   send_count /= nproc;
+  //   recv_count /= nproc;
+  //   collective_op_base* op = start_alltoall(comm, send_count, sendtype,
+  //                                           recv_count, recvtype, sendbuf, recvbuf);
+  //   return op;
+  // }
 }
 
 int
